use std::ffi::c_char;

use crate::{offset_struct, high::vector::Vector3};

offset_struct! {
    pub struct CBasePlayer {
        player_index: u32 where offset(0x58),
        grapple_active: bool where offset(0x23E8),
        platformUserId: u32 where offset(0x1D08),
        classModsActive: i32 where offset(0x1D10),
        posClassModsActive: i32 where offset(0x1D8C),
        passives: bool where offset(0x1DCC),
        selectedOffhand: i32 where offset(0x4948),
        selectedOffhandPendingHybridAction: i32 where offset(0x1358),
        playerFlags: i32 where offset(0x1E88),
        lastUCmdSimulationTicks: i32 where offset(0x26A8),
        lastUCmdSimulationRemainderTime: f32 where offset(0x26AC),
        remoteTurret: i32 where offset(0x1F04),
        hGroundEntity: i32 where offset(0x414),
        titanSoul: i32 where offset(0x13B8),
        petTitan: i32 where offset(0x2054),
        iHealth: i32 where offset(0x4D4),
        iMaxHealth: i32 where offset(0x4D0),
        lifeState: i32 where offset(0x4F1),
        flMaxspeed: f32 where offset(0x50C),
        fFlags: i32 where offset(0x298),
        iObserverMode: i32 where offset(0x1F64),
        hObserverTarget: i32 where offset(0x1F6C),
        hViewModel: i32 where offset(0x2098),
        ubEFNointerpParity: i32 where offset(0x27E4),
        activeBurnCardIndex: i32 where offset(0x1FA4),
        hColorCorrectionCtrl: i32 where offset(0x1B68),
        PlayerFog__hCtrl: i32 where offset(0x19E0),
        bShouldDrawPlayerWhileUsingViewEntity: bool where offset(0x26BC),
        title: [c_char;32] where offset(0x2848),
        useCredit: bool where offset(0x2964),
        damageImpulseNoDecelEndTime: f32 where offset(0x1F40),
        hasMic: bool where offset(0x1E8C),
        inPartyChat: bool where offset(0x1E8D),
        playerMoveSpeedScale: f32 where offset(0x1E90),
        flDeathTime: f32 where offset(0x1F58),
        iSpawnParity: bool where offset(0x25A8),
        upDir: Vector3 where offset(0x102284),
        lastDodgeTime: f32 where offset(0x259C),
        wallHanging: bool where offset(0x22E0),
        traversalType: i32 where offset(0x22EC),
        traversalState: i32 where offset(0x22F0),
        traversalRefPos: Vector3 where offset(0x2328),
        traversalForwardDir: Vector3 where offset(0x231C),
        traversalYawDelta: f32 where offset(0x2354),
        traversalYawPoseParameter: i32 where offset(0x2358),
        grappleHook: i32 where offset(0x2050),
        autoSprintForced: i32 where offset(0x27C0),
        fIsSprinting: bool where offset(0x27C4),
        sprintStartedTime: f32 where offset(0x27CC),
        sprintStartedFrac: f32 where offset(0x27D0),
        sprintEndedTime: f32 where offset(0x27D4),
        sprintEndedFrac: f32 where offset(0x27D8),
        stickySprintStartTime: f32 where offset(0x27DC),
        smartAmmoPreviousHighestLockOnMeFractionValue: f32 where offset(0x2998),
        activeZipline: i32 where offset(0x23FC),
        ziplineReverse: bool where offset(0x2400),
        ziplineState: i32 where offset(0x2410),
        duckState: i32 where offset(0x2250),
        StandHullMin: Vector3 where offset(0x2254),
        StandHullMax: Vector3 where offset(0x2260),
        DuckHullMin: Vector3 where offset(0x226C),
        DuckHullMax: Vector3 where offset(0x2278),
        xp: i32 where offset(0x205C),
        generation: i32 where offset(0x2060),
        rank: i32 where offset(0x2064),
        serverForceIncreasePlayerListGenerationParity: i32 where offset(0x2068),
        isPlayingRanked: bool where offset(0x206C),
        skill_mu: f32 where offset(0x2070),
        titanSoulBeingRodeoed: i32 where offset(0x1E80),
        entitySyncingWithMe: i32 where offset(0x1E84),
        nextTitanRespawnAvailable: f32 where offset(0x2078),
        hasBadReputation: bool where offset(0x1C90),
        communityName: [c_char;64] where offset(0x1C91),
        communityClanTag: [c_char;16] where offset(0x1CD1),
        factionName: [c_char;16] where offset(0x1CE1),
        hardwareIcon: [c_char;16] where offset(0x1CF1),
        happyHourActive: bool where offset(0x1D01),
        gestureAutoKillBitfield: i32 where offset(0x1EF4),
        pilotClassIndex: i32 where offset(0x2EA8),
        vecAbsOrigin: Vector3 where offset(0x100490),
        isPerformingBoostAction: bool where offset(0x25BE),
        ziplineValid3pWeaponLayerAnim: bool where offset(0x240C),
        playerScriptNetDataGlobal: i32 where offset(0x345C),
        bZooming: i32 where offset(0x1598),
        zoomToggleOn: bool where offset(0x1599),
        zoomBaseFrac: f32 where offset(0x159C),
        zoomBaseTime: f32 where offset(0x15A0),
        zoomFullStartTime: f32 where offset(0x15A4),
        camoIndex: i32 where offset(0xA04),
        decalIndex: i32 where offset(0xA08),
    }
}
