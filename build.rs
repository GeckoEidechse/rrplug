extern crate bindgen;
extern crate cc;
// extern crate windres;

use std::env;
use std::path::Path;
// use windres::Build;

fn main() {
    // OUT_DIR is generated by the rust compiler so do not attempt at setting it yourself
    let out_dir = env::var_os("OUT_DIR").unwrap();
    let dest_path = Path::new(&out_dir).join("bindings.rs");

    // Configure and generate bindings.
    let bindings = bindgen::Builder::default()
        .header("headers/plugin_abi.h")
        .generate();

    println!("{:?}", bindings);

    // Write the generated bindings to an output file.
    bindings.unwrap().write_to_file(dest_path).unwrap();
    
    // add rerun stuff
    println!("cargo:rerun-if-changed=build.rs");
    println!("cargo:rerun-if-changed=Cargo.lock");
    println!("cargo:rerun-if-changed=headers/plugin_abi.h");
    println!("cargo:rerun-if-changed=Cargo.lock");
    println!("cargo:rerun-if-changed=headers/Resource.rc");
}
